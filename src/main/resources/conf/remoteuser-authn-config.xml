<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:c="http://www.springframework.org/schema/c"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans classpath:/org/springframework/beans/factory/xml/spring-beans-3.2.xsd
                           http://www.springframework.org/schema/context classpath:/org/springframework/context/config/spring-context-3.2.xsd
                           http://www.springframework.org/schema/util classpath:/org/springframework/beans/factory/xml/spring-util-3.2.xsd"
                           
       default-init-method="initialize"
       default-destroy-method="destroy">

    <!-- Check getRemoteUser() for identity (the typical case). -->
    <bean id="shibboleth.authn.RemoteUser.checkRemoteUser" class="java.lang.Boolean">
        <constructor-arg type="boolean" value="true" />
    </bean>

    <!-- Populate one or both of the lists below to define HTTP headers or Servlet Attributes to check. -->
    
    <util:list id="shibboleth.authn.RemoteUser.checkHeaders">
        <value>Foo</value>
        <!--
        <value>User-Identity</value>
        -->
    </util:list>

    <util:list id="shibboleth.authn.RemoteUser.checkAttributes">
        <!--
        <value>User-Identity</value>
        -->
    </util:list>
    
    <!-- Uncomment/configure to install username whitelist, blacklist, and/or match expressions. -->
    
    <util:list id="shibboleth.authn.RemoteUser.whitelistedUsernames">
        <!--
        <value>goodguy</value>
        -->
    </util:list>

    <util:list id="shibboleth.authn.RemoteUser.blacklistedUsernames">
        <!--
        <value>badguy</value>
        -->
    </util:list>
    
    <!--
    <bean id="shibboleth.authn.RemoteUser.matchExpression" class="java.util.regex.Pattern" factory-method="compile"
        c:_0="^(.+)@example\.edu]$" />
    -->

</beans>
