<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:c="http://www.springframework.org/schema/c"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans classpath:/org/springframework/beans/factory/xml/spring-beans-3.2.xsd
                           http://www.springframework.org/schema/context classpath:/org/springframework/context/config/spring-context-3.2.xsd
                           http://www.springframework.org/schema/util classpath:/org/springframework/beans/factory/xml/spring-util-3.2.xsd"

       default-init-method="initialize"
       default-destroy-method="destroy">

    <context:property-placeholder system-properties-mode="OVERRIDE" location="classpath:conf/idp.properties" />

    <!-- This bean MUST be called "conversionService" to work properly. -->
    <bean id="conversionService" class="org.springframework.context.support.ConversionServiceFactoryBean">
        <property name="converters">
            <list>
                <bean class="net.shibboleth.ext.spring.config.DurationToLongConverter"/>
                <bean class="net.shibboleth.ext.spring.config.StringToIPRangeConverter"/>
            </list>
        </property>
    </bean>

    <import resource="authn-comparison.xml" />
    <import resource="authn-flow-descriptors.xml" />
    <import resource="session-manager.xml" />
    
    <bean id="shibboleth.LogbackLogging" class="net.shibboleth.idp.log.LogbackLoggingService" init-method="start" destroy-method="stop">
        <property name="id" value="shibboleth.LogbackLogging" />
        <property name="loggingConfiguration">
            <bean class="net.shibboleth.utilities.java.support.resource.FilesystemResource" c:resourcePath="${idp.home}/conf/logback.xml" />
        </property>
        <property name="reloadCheckDelay" value="0" />
    </bean>
    
    <bean id="shibboleth.OpensamlConfig" class="common.OpensamlConfigBean"
        depends-on="shibboleth.LogbackLogging" p:parserPool-ref="shibboleth.ParserPool" />

    <bean id="shibboleth.VelocityEngine" class="org.springframework.ui.velocity.VelocityEngineFactoryBean" depends-on="shibboleth.LogbackLogging">
        <property name="overrideLogging" value="false"/>
        <property name="velocityProperties">
            <props>
                <prop key="runtime.log.logsystem.class">
                    net.shibboleth.utilities.java.support.velocity.Slf4JLogChute
                </prop>
                <prop key="input.encoding">UTF-8</prop>
                <prop key="output.encoding">UTF-8</prop>
                <prop key="resource.loader">classpath, string</prop>
                <prop key="classpath.resource.loader.class">
                    org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader
                </prop>
                <prop key="string.resource.loader.class">
                    org.apache.velocity.runtime.resource.loader.StringResourceLoader
                </prop>
                <prop key="file.resource.loader.class">
                    org.apache.velocity.runtime.resource.loader.FileResourceLoader
                </prop>
                <prop key="file.resource.loader.path">${idp.home}</prop>
                <prop key="file.resource.loader.cache">false</prop>
            </props>
        </property>
    </bean>

    <bean id="shibboleth.ParserPool" class="net.shibboleth.utilities.java.support.xml.BasicParserPool" depends-on="shibboleth.LogbackLogging"
            p:maxPoolSize="100"
            p:coalescing="true"
            p:ignoreComments="true"
            p:ignoreElementContentWhitespace="true"
            p:namespaceAware="true">
        <property name="builderAttributes">
            <map>
                <entry>
                    <key>
                        <value>http://apache.org/xml/properties/security-manager</value>
                    </key>
                    <bean id="shibboleth.XercesSecurityManager" class="${idp.xml.securityManager}" />
                </entry>
            </map>
        </property>
        <property name="builderFeatures">
            <map>
                <entry>
                    <key>
                        <value>http://apache.org/xml/features/disallow-doctype-decl</value>
                    </key>
                    <util:constant static-field="java.lang.Boolean.TRUE"/>
                </entry>
                <entry>
                    <key>
                        <value>http://apache.org/xml/features/validation/schema/normalized-value</value>
                    </key>
                    <util:constant static-field="java.lang.Boolean.FALSE"/>
                </entry>
            </map>
        </property>
    </bean>

    <bean id="shibboleth.HttpServletRequest" class="net.shibboleth.utilities.java.support.net.ThreadLocalHttpServletRequestProxy" />
    <bean id="shibboleth.HttpServletResponse" class="net.shibboleth.utilities.java.support.net.ThreadLocalHttpServletResponseProxy" />
    
    <bean id="shibboleth.BuilderFactory" factory-method="getBuilderFactory" class="org.opensaml.core.xml.config.XMLObjectProviderRegistrySupport" depends-on="shibboleth.OpensamlConfig" />
    <bean id="shibboleth.MarshallerFactory" factory-method="getMarshallerFactory" class="org.opensaml.core.xml.config.XMLObjectProviderRegistrySupport" depends-on="shibboleth.OpensamlConfig" />
    <bean id="shibboleth.UnmarshallerFactory" factory-method="getUnmarshallerFactory" class="org.opensaml.core.xml.config.XMLObjectProviderRegistrySupport" depends-on="shibboleth.OpensamlConfig" />

    <bean id="shibboleth.CookieManager" class="net.shibboleth.utilities.java.support.net.CookieManager"
        p:httpServletRequest-ref="shibboleth.HttpServletRequest" p:httpServletResponse-ref="shibboleth.HttpServletResponse"
        p:secure="false" />
        
    <bean id="shibboleth.StorageService" class="${idp.storage.StorageService}" p:cleanupInterval="${idp.storage.cleanupInterval}" />
    
    <bean id="shibboleth.ReplayCache" class="org.opensaml.storage.ReplayCache" depends-on="shibboleth.LogbackLogging"
        p:storage-ref="shibboleth.StorageService" p:strict="true" />
    
</beans>
