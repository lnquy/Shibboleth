<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:c="http://www.springframework.org/schema/c"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans classpath:/org/springframework/beans/factory/xml/spring-beans-3.2.xsd
                           http://www.springframework.org/schema/context classpath:/org/springframework/context/config/spring-context-3.2.xsd
                           http://www.springframework.org/schema/util classpath:/org/springframework/beans/factory/xml/spring-util-3.2.xsd">

    <!--
    This file provisions the IdP with information about the configured login mechanisms available for use.
    The actual beans and subflows that make up those mechanisms are in their own files, but this pulls them
    together with deployer-supplied metadata to describe them to the system.
    
    You can turn on and off individual mechanisms by adding and remove them here. Nothing left out will
    be used, regardless any other files loaded by the Spring container.
    -->

    <util:list id="shibboleth.AvailableAuthenticationFlows">
        
        <bean c:id="AuthenticationFlow/IPAddress" class="net.shibboleth.idp.authn.AuthenticationFlowDescriptor"
                p:resultSerializer-ref="shibboleth.DefaultAuthenticationResultSerializer"
                p:passiveAuthenticationSupported="true"
                p:forcedAuthenticationSupported="false"
                p:lifetime="PT60S" p:inactivityTimeout="PT60S">
            <property name="supportedPrincipals">
                <list>
                    <bean class="net.shibboleth.idp.saml.authn.AuthnContextClassRefPrincipal"
                        c:classRef="urn:oasis:names:tc:SAML:2.0:ac:classes:InternetProtocol" />
                </list>
            </property>
        </bean>
        
        <bean c:id="AuthenticationFlow/RemoteUser" class="net.shibboleth.idp.authn.AuthenticationFlowDescriptor"
                p:resultSerializer-ref="shibboleth.DefaultAuthenticationResultSerializer"
                p:passiveAuthenticationSupported="false"
                p:forcedAuthenticationSupported="true"
                p:lifetime="${idp.authn.defaultLifetime}" p:inactivityTimeout="${idp.authn.defaultTimeout}">
            <property name="supportedPrincipals">
                <list>
                    <bean class="net.shibboleth.idp.saml.authn.AuthnContextClassRefPrincipal"
                        c:classRef="urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport" />
                    <bean class="net.shibboleth.idp.saml.authn.AuthnContextClassRefPrincipal"
                        c:classRef="urn:oasis:names:tc:SAML:2.0:ac:classes:Password" />
                </list>
            </property>
        </bean>

        <bean c:id="AuthenticationFlow/JAASForm" class="net.shibboleth.idp.authn.AuthenticationFlowDescriptor"
                p:resultSerializer-ref="shibboleth.DefaultAuthenticationResultSerializer"
                p:passiveAuthenticationSupported="false"
                p:forcedAuthenticationSupported="true"
                p:lifetime="${idp.authn.defaultLifetime}" p:inactivityTimeout="${idp.authn.defaultTimeout}">
            <property name="supportedPrincipals">
                <list>
                    <bean class="net.shibboleth.idp.saml.authn.AuthnContextClassRefPrincipal"
                        c:classRef="urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport" />
                    <bean class="net.shibboleth.idp.saml.authn.AuthnContextClassRefPrincipal"
                        c:classRef="urn:oasis:names:tc:SAML:2.0:ac:classes:Password" />
                </list>
            </property>
        </bean>

        <bean c:id="AuthenticationFlow/JAASBasic" class="net.shibboleth.idp.authn.AuthenticationFlowDescriptor"
                p:resultSerializer-ref="shibboleth.DefaultAuthenticationResultSerializer"
                p:passiveAuthenticationSupported="true"
                p:forcedAuthenticationSupported="false"
                p:lifetime="${idp.authn.defaultLifetime}" p:inactivityTimeout="${idp.authn.defaultTimeout}">
            <property name="supportedPrincipals">
                <list>
                    <bean class="net.shibboleth.idp.saml.authn.AuthnContextClassRefPrincipal"
                        c:classRef="urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport" />
                    <bean class="net.shibboleth.idp.saml.authn.AuthnContextClassRefPrincipal"
                        c:classRef="urn:oasis:names:tc:SAML:2.0:ac:classes:Password" />
                </list>
            </property>
        </bean>

    </util:list>

    <!--
    Define entries here to map error messages thrown by authentication plugins like JAAS modules
    and classify them as particular kinds of errors for use in your templates.
    -->
    <util:map id="shibboleth.ClassifiedMessageMap">
        <entry key="UnknownUsername">
            <list>
                <value>CLIENT_NOT_FOUND</value>
                <value>DN_RESOLUTION_FAILURE</value>
            </list>
        </entry>
        <entry key="InvalidPassword">
            <list>
                <value>PREAUTH_FAILED</value>
                <value>INVALID_CREDENTIALS</value>
            </list>
        </entry>
    </util:map>

    <!--
    Defining this allows us to specify symbolic text replacements that shrink the size of results
    saved to client-side storage such as cookies.
    -->
    <bean id="shibboleth.DefaultAuthenticationResultSerializer"
            class="net.shibboleth.idp.authn.DefaultAuthenticationResultSerializer">
        <property name="symbolics">
            <map>
                <entry key="net.shibboleth.idp.saml.authn.AuthnContextClassRefPrincipal" value="1" />
                <entry key="net.shibboleth.idp.saml.authn.AuthnContextDeclRefPrincipal" value="2" />
                <entry key="javax.security.auth.kerberos.KerberosPrincipal" value="3" />
                
                <entry key="urn:oasis:names:tc:SAML:2.0:ac:classes:Password" value="10" />
                <entry key="urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport" value="11" />
                <entry key="urn:oasis:names:tc:SAML:2.0:ac:classes:InternetProtocol" value="12" />
            </map>
        </property>
    </bean>

</beans>
