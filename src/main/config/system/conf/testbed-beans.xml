<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:c="http://www.springframework.org/schema/c"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans classpath:/org/springframework/beans/factory/xml/spring-beans-3.2.xsd
                           http://www.springframework.org/schema/context classpath:/org/springframework/context/config/spring-context-3.2.xsd
                           http://www.springframework.org/schema/util classpath:/org/springframework/beans/factory/xml/spring-util-3.2.xsd"

       default-init-method="initialize"
       default-destroy-method="destroy">

    <!-- Expose some common beans for convenient global wiring -->
    
    <bean id="testbed.IdGenerator" class="net.shibboleth.utilities.java.support.security.Type4UuidIdentifierGenerationStrategy" />
    
    <bean id="testbed.GlobalSecurityConfiguration" factory-method="getGlobalXMLSecurityConfiguration" class="org.opensaml.xmlsec.SecurityConfigurationSupport" />
    
    <bean id="testbed.KeyInfoCredentialResolver" factory-method="getDefaultKeyInfoCredentialResolver" factory-bean="testbed.GlobalSecurityConfiguration" />
    
    
    <!-- Specific testbed-related beans -->

    <bean id="testbed.DirectoryService" class="common.InMemoryDirectory" init-method="start" destroy-method="stop">
        <constructor-arg value="src/test/config/ldap.ldif" />
    </bean>
    
    <!-- TODO: for the file references, might be preferable to make these resolved as classpath resources,
         instead of relative filesystem references. -->
    
    <bean id="testbed.idp.EntityID" class="java.lang.String">
        <constructor-arg value="https://idp.example.org" />
    </bean>
    
    <bean id="testbed.idp.PrivateKey" class="net.shibboleth.ext.spring.factory.PrivateKeyFactoryBean">
        <property name="privateKeyFile">
            <bean class="java.io.File">
                <constructor-arg value="${idp.home}/creds/idp.key" />
            </bean>
        </property>
    </bean>
    
    <bean id="testbed.idp.X509Certificate" class="net.shibboleth.ext.spring.factory.X509CertificateFactoryBean">
        <property name="certificateFile">
            <bean class="java.io.File">
                <constructor-arg value="${idp.home}/creds/idp.crt" />
            </bean>
        </property>
    </bean>
    
    <bean id="testbed.sp.EntityID" class="java.lang.String">
        <constructor-arg value="https://sp.example.org" />
    </bean>
    
    <bean id="testbed.sp.PrivateKey" class="net.shibboleth.ext.spring.factory.PrivateKeyFactoryBean">
        <property name="privateKeyFile">
            <bean class="java.io.File">
                <constructor-arg value="${idp.home}/creds/sp.key" />
            </bean>
        </property>
    </bean>
    
    <bean id="testbed.sp.X509Certificate" class="net.shibboleth.ext.spring.factory.X509CertificateFactoryBean">
        <property name="certificateFile">
            <bean class="java.io.File">
                <constructor-arg value="${idp.home}/creds/sp.crt" />
            </bean>
        </property>
    </bean>

</beans>