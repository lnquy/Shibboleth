<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:c="http://www.springframework.org/schema/c"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans classpath:/org/springframework/beans/factory/xml/spring-beans-3.2.xsd
                           http://www.springframework.org/schema/context classpath:/org/springframework/context/config/spring-context-3.2.xsd
                           http://www.springframework.org/schema/util classpath:/org/springframework/beans/factory/xml/spring-util-3.2.xsd"
                           
       default-init-method="initialize"
       default-destroy-method="destroy">
       
    <import resource="../../../conf/ldap-authn-config.xml" />

    <bean class="net.shibboleth.idp.profile.impl.ProfileActionBeanPostProcessor" />
    
    <bean id="ExtractUsernamePasswordFromFormRequest" class="net.shibboleth.idp.authn.impl.ExtractUsernamePasswordFromFormRequest" scope="prototype"
        p:httpServletRequest-ref="shibboleth.HttpServletRequest"
        p:usernameFieldName-ref="shibboleth.authn.LDAP.UsernameFieldName"
        p:passwordFieldName-ref="shibboleth.authn.LDAP.PasswordFieldName"
        p:SSOBypassFieldName-ref="shibboleth.authn.LDAP.SSOBypassFieldName"
        p:lowercase-ref="shibboleth.authn.LDAP.Lowercase"
        p:uppercase-ref="shibboleth.authn.LDAP.Uppercase"
        p:trim-ref="shibboleth.authn.LDAP.Trim"
        p:transforms-ref="shibboleth.authn.LDAP.Transforms" />
        
    <bean id="ValidateUsernamePasswordAgainstLDAP" class="net.shibboleth.idp.authn.impl.ValidateUsernamePasswordAgainstLDAP" scope="prototype"
            p:authenticator-ref="authenticator"
            p:classifiedMessages-ref="shibboleth.ClassifiedMessageMap"
            p:resultCachingPredicate="#{getObject('shibboleth.authn.LDAP.resultCachingPredicate')}">
        <property name="returnAttributes">
          <array>
            <value>cn</value>
            <value>businessCategory</value>
            <value>mail</value>
          </array>
        </property>
    </bean>

    <bean name="authenticator" class="org.ldaptive.auth.Authenticator"
          p:resolveEntryOnFailure="true">
        <constructor-arg index="0">
            <bean class="org.ldaptive.auth.SearchDnResolver"
                p:baseDn="${idp.authn.ldap.baseDn}"
                p:subtreeSearch="${idp.authn.ldap.subtreeSearch}"
                p:userFilter="${idp.authn.ldap.userFilter}"
                p:connectionFactory-ref="connectionFactory" />
        </constructor-arg>
        <constructor-arg index="1">
            <bean class="org.ldaptive.auth.BindAuthenticationHandler"
                p:connectionFactory-ref="connectionFactory" />
        </constructor-arg>
        <!-- used to test account states
             see businessCategory in src/test/config/ldap.ldif
        <property name="authenticationResponseHandlers">
          <bean class="idp.MockAuthenticationResponseHandler">
            <constructor-arg>
              <array>
              <bean class="org.ldaptive.auth.AccountState">
                <constructor-arg>
                  <bean class="org.ldaptive.auth.AccountState.DefaultWarning">
                    <constructor-arg index="0">
                      <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
                        <property name="staticMethod"><value>java.util.Calendar.getInstance</value></property>
                      </bean>
                    </constructor-arg>
                    <constructor-arg index="1"><value>10</value></constructor-arg>
                  </bean>
                </constructor-arg>
              </bean>
              <bean class="org.ldaptive.auth.ext.PasswordPolicyAccountState">
                <constructor-arg index="0">
                  <value type="org.ldaptive.control.PasswordPolicyControl.Error">PASSWORD_EXPIRED</value>
                </constructor-arg>
              </bean>
              </array>
            </constructor-arg>
          </bean>
        </property>
        -->
    </bean>

    <bean name="connectionFactory" class="org.ldaptive.DefaultConnectionFactory">
        <constructor-arg>
            <bean class="org.ldaptive.ConnectionConfig"
                p:ldapUrl="${idp.authn.ldap.ldapUrl}" />
        </constructor-arg>
    </bean>
</beans>
